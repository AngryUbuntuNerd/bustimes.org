# Generated by Django 2.2.6 on 2019-10-19 23:17

import autoslug.fields
import busstops.models
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('busstops', '0001_initial'), ('busstops', '0002_journey_stopusageusage'), ('busstops', '0003_stoppoint_osm'), ('busstops', '0004_auto_20170308_2345'), ('busstops', '0005_auto_20170315_2142'), ('busstops', '0006_auto_20170403_2237'), ('busstops', '0007_auto_20170404_2235'), ('busstops', '0008_auto_20170521_2347'), ('busstops', '0009_auto_20170620_1734'), ('busstops', '0010_auto_20170808_2307'), ('busstops', '0011_auto_20170817_0859'), ('busstops', '0012_auto_20170914_2105'), ('busstops', '0013_auto_20171024_2057'), ('busstops', '0014_auto_20171024_2147'), ('busstops', '0015_auto_20171024_2209'), ('busstops', '0016_auto_20171106_1546'), ('busstops', '0017_auto_20171114_0947'), ('busstops', '0018_auto_20171114_1435'), ('busstops', '0019_auto_20171223_1636'), ('busstops', '0020_auto_20171228_2307'), ('busstops', '0021_auto_20180109_1326'), ('busstops', '0022_place_polygon'), ('busstops', '0023_auto_20180420_0755'), ('busstops', '0024_auto_20180429_1445'), ('busstops', '0025_auto_20180522_1228'), ('busstops', '0026_auto_20180608_1949'), ('busstops', '0027_auto_20180609_2250'), ('busstops', '0028_auto_20180610_2100'), ('busstops', '0029_auto_20180710_2141'), ('busstops', '0030_auto_20180724_1453'), ('busstops', '0031_auto_20180724_1613'), ('busstops', '0032_auto_20180827_1630'), ('busstops', '0033_auto_20180829_1308'), ('busstops', '0034_auto_20180924_1016'), ('busstops', '0035_auto_20181223_1524'), ('busstops', '0036_auto_20181223_1727'), ('busstops', '0037_auto_20190127_2246'), ('busstops', '0038_auto_20190224_1316'), ('busstops', '0039_auto_20190401_1253'), ('busstops', '0040_auto_20190507_2244'), ('busstops', '0041_stopcode'), ('busstops', '0042_auto_20190529_1942'), ('busstops', '0043_operator_licences'), ('busstops', '0044_auto_20190803_1042'), ('busstops', '0045_auto_20190922_1233'), ('busstops', '0046_auto_20191001_1255'), ('busstops', '0047_auto_20191020_0016')]

    initial = True

    dependencies = [
        ('vosa', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminArea',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('atco_code', models.PositiveIntegerField()),
                ('name', models.CharField(db_index=True, max_length=48)),
                ('short_name', models.CharField(blank=True, max_length=48)),
                ('country', models.CharField(blank=True, max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=48)),
                ('admin_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.AdminArea')),
            ],
        ),
        migrations.CreateModel(
            name='LiveSource',
            fields=[
                ('name', models.CharField(max_length=4, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.CharField(max_length=48, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=48)),
                ('qualifier_name', models.CharField(blank=True, max_length=48)),
                ('latlong', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('adjacent', models.ManyToManyField(blank=True, related_name='neighbour', to='busstops.Locality')),
                ('admin_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.AdminArea')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.District')),
                ('parent', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.Locality')),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=True, populate_from='name')),
            ],
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('vehicle_mode', models.CharField(blank=True, max_length=48)),
                ('parent', models.CharField(blank=True, max_length=48)),
                ('address', models.CharField(blank=True, max_length=128)),
                ('url', models.URLField(blank=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=128)),
                ('twitter', models.CharField(blank=True, max_length=15)),
            ],
            bases=(busstops.models.ValidateOnSaveMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=48)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_code', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('line_name', models.CharField(blank=True, max_length=64)),
                ('line_brand', models.CharField(blank=True, max_length=64)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('outbound_description', models.CharField(blank=True, max_length=255)),
                ('inbound_description', models.CharField(blank=True, max_length=255)),
                ('mode', models.CharField(max_length=11)),
                ('net', models.CharField(blank=True, max_length=3)),
                ('line_ver', models.PositiveIntegerField(blank=True, null=True)),
                ('date', models.DateField()),
                ('current', models.BooleanField(db_index=True, default=True)),
                ('show_timetable', models.BooleanField(default=False)),
                ('geometry', django.contrib.gis.db.models.fields.MultiLineStringField(null=True, srid=4326)),
                ('wheelchair', models.BooleanField(default=False)),
                ('low_floor', models.NullBooleanField()),
                ('assistance_service', models.BooleanField(default=False)),
                ('mobility_scooter', models.BooleanField(default=False)),
                ('operator', models.ManyToManyField(blank=True, to='busstops.Operator')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.Region')),
            ],
        ),
        migrations.CreateModel(
            name='StopArea',
            fields=[
                ('id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=48)),
                ('stop_area_type', models.CharField(choices=[('GPBS', 'on-street pair'), ('GCLS', 'on-street cluster'), ('GAIR', 'airport building'), ('GBCS', 'bus/coach station'), ('GFTD', 'ferry terminal/dock'), ('GTMU', 'tram/metro station'), ('GRLS', 'rail station'), ('GCCH', 'coach service coverage')], max_length=4)),
                ('latlong', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('active', models.BooleanField()),
                ('admin_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.AdminArea')),
                ('parent', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.StopArea')),
            ],
        ),
        migrations.CreateModel(
            name='StopPoint',
            fields=[
                ('atco_code', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('naptan_code', models.CharField(db_index=True, max_length=16)),
                ('common_name', models.CharField(max_length=48)),
                ('landmark', models.CharField(blank=True, max_length=48)),
                ('street', models.CharField(blank=True, max_length=48)),
                ('crossing', models.CharField(blank=True, max_length=48)),
                ('indicator', models.CharField(blank=True, max_length=48)),
                ('latlong', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('suburb', models.CharField(blank=True, max_length=48)),
                ('town', models.CharField(blank=True, max_length=48)),
                ('locality_centre', models.BooleanField()),
                ('heading', models.PositiveIntegerField(blank=True, null=True)),
                ('bearing', models.CharField(blank=True, choices=[('N', 'north'), ('NE', 'north east'), ('E', 'east'), ('SE', 'south east'), ('S', 'south'), ('SW', 'south west'), ('W', 'west'), ('NW', 'north west')], max_length=2)),
                ('stop_type', models.CharField(choices=[('AIR', 'Airport entrance'), ('GAT', 'Air airside area'), ('FTD', 'Ferry terminal/dock entrance'), ('FER', 'Ferry/dock berth area'), ('FBT', 'Ferry berth'), ('RSE', 'Rail station entrance'), ('RLY', 'Rail platform access area'), ('RPL', 'Rail platform'), ('TMU', 'Tram/metro/underground entrance'), ('MET', 'MET'), ('PLT', 'Metro and underground platform access area'), ('BCE', 'Bus/coach station entrance'), ('BCS', 'Bus/coach bay/stand/stance within bus/coach station'), ('BCQ', 'Bus/coach bay'), ('BCT', 'On street bus/coach/tram stop'), ('TXR', 'Taxi rank (head of)'), ('STR', 'Shared taxi rank (head of)')], max_length=3)),
                ('bus_stop_type', models.CharField(blank=True, choices=[('MKD', 'Marked (pole, shelter etc)'), ('HAR', 'Hail and ride'), ('CUS', 'Custom (unmarked, or only marked on road)'), ('FLX', 'Flexible zone')], max_length=3)),
                ('timing_status', models.CharField(blank=True, choices=[('PPT', 'Principal point'), ('TIP', 'Time info point'), ('PTP', 'Principal and time info point'), ('OTH', 'Other bus stop')], max_length=3)),
                ('active', models.BooleanField(db_index=True)),
                ('admin_area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.AdminArea')),
                ('live_sources', models.ManyToManyField(blank=True, to='busstops.LiveSource')),
                ('locality', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.Locality')),
                ('stop_area', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.StopArea')),
                ('osm', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StopUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.CharField(max_length=8)),
                ('order', models.PositiveIntegerField()),
                ('timing_status', models.CharField(choices=[('PPT', 'Principal point'), ('TIP', 'Time info point'), ('PTP', 'Principal and time info point'), ('OTH', 'Other bus stop')], max_length=3)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.Service')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.StopPoint')),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='stops',
            field=models.ManyToManyField(editable=False, through='busstops.StopUsage', to='busstops.StopPoint'),
        ),
        migrations.AddField(
            model_name='operator',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.Region'),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('operators', models.ManyToManyField(blank=True, to='busstops.Operator')),
                ('services', models.ManyToManyField(blank=True, to='busstops.Service')),
            ],
        ),
        migrations.AddField(
            model_name='adminarea',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.Region'),
        ),
        migrations.CreateModel(
            name='Journey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField()),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.StopPoint')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.Service')),
            ],
        ),
        migrations.AlterField(
            model_name='adminarea',
            name='name',
            field=models.CharField(max_length=48),
        ),
        migrations.AddField(
            model_name='operator',
            name='slug',
            field=autoslug.fields.AutoSlugField(editable=True, populate_from='name', unique=True),
        ),
        migrations.AddField(
            model_name='service',
            name='slug',
            field=autoslug.fields.AutoSlugField(always_update=True, blank=True, editable=True, populate_from='description'),
        ),
        migrations.AlterField(
            model_name='service',
            name='assistance_service',
            field=models.NullBooleanField(),
        ),
        migrations.AlterField(
            model_name='service',
            name='mobility_scooter',
            field=models.NullBooleanField(),
        ),
        migrations.AlterField(
            model_name='service',
            name='wheelchair',
            field=models.NullBooleanField(),
        ),
        migrations.CreateModel(
            name='ServiceDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.Service')),
            ],
            options={
                'unique_together': {('service', 'date')},
            },
        ),
        migrations.CreateModel(
            name='StopUsageUsage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField()),
                ('order', models.PositiveIntegerField()),
                ('journey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.Journey')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.StopPoint')),
            ],
            options={
                'index_together': {('journey', 'datetime'), ('stop', 'datetime')},
            },
        ),
        migrations.AlterField(
            model_name='service',
            name='geometry',
            field=django.contrib.gis.db.models.fields.MultiLineStringField(editable=False, null=True, srid=4326),
        ),
        migrations.AlterField(
            model_name='service',
            name='description',
            field=models.CharField(blank=True, db_index=True, max_length=255),
        ),
        migrations.RunSQL(
            sql='update busstops_service set slug=service_code;',
        ),
        migrations.AlterField(
            model_name='service',
            name='slug',
            field=autoslug.fields.AutoSlugField(always_update=True, editable=True, populate_from=str, unique=True),
        ),
        migrations.AlterField(
            model_name='stoppoint',
            name='osm',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='operator',
            name='slug',
            field=autoslug.fields.AutoSlugField(editable=True, populate_from=str, unique=True),
        ),
        migrations.AlterField(
            model_name='service',
            name='slug',
            field=autoslug.fields.AutoSlugField(editable=True, populate_from=str, unique=True),
        ),
        migrations.AlterModelOptions(
            name='adminarea',
            options={'ordering': ('name',)},
        ),
        migrations.AlterModelOptions(
            name='district',
            options={'ordering': ('name',)},
        ),
        migrations.AlterModelOptions(
            name='journey',
            options={'ordering': ('datetime',)},
        ),
        migrations.AlterModelOptions(
            name='locality',
            options={'ordering': ('name',)},
        ),
        migrations.AlterModelOptions(
            name='operator',
            options={'ordering': ('name',)},
        ),
        migrations.AlterModelOptions(
            name='region',
            options={'ordering': ('name',)},
        ),
        migrations.AlterModelOptions(
            name='stoppoint',
            options={'ordering': ('common_name', 'atco_code')},
        ),
        migrations.AlterModelOptions(
            name='stopusage',
            options={'ordering': ('direction', 'order')},
        ),
        migrations.AlterModelOptions(
            name='stopusageusage',
            options={'ordering': ('datetime',)},
        ),
        migrations.RunSQL(
            sql='update busstops_locality set slug=id;',
        ),
        migrations.AlterField(
            model_name='locality',
            name='slug',
            field=autoslug.fields.AutoSlugField(editable=True, populate_from='name', unique=True),
        ),
        migrations.AlterField(
            model_name='locality',
            name='slug',
            field=autoslug.fields.AutoSlugField(always_update=True, editable=True, populate_from='get_qualified_name', unique=True),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('width', models.PositiveIntegerField()),
                ('height', models.PositiveIntegerField()),
                ('image', models.ImageField(height_field='height', upload_to='', width_field='width')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('source', models.CharField(blank=True, max_length=255)),
                ('source_url', models.URLField(blank=True)),
            ],
        ),
        migrations.AlterField(
            model_name='locality',
            name='latlong',
            field=django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326),
        ),
        migrations.AddField(
            model_name='service',
            name='image',
            field=models.ManyToManyField(blank=True, to='busstops.Image'),
        ),
        migrations.CreateModel(
            name='ServiceCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.Service')),
            ],
            options={
                'unique_together': {('service', 'scheme', 'code')},
            },
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('url', models.URLField(blank=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('latlong', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('parent', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.Place')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.DataSource')),
                ('polygon', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('source', 'code')},
            },
        ),
        migrations.AlterField(
            model_name='service',
            name='region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='busstops.Region'),
        ),
        migrations.AlterField(
            model_name='stoppoint',
            name='admin_area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.AdminArea'),
        ),
        migrations.AlterField(
            model_name='stoppoint',
            name='naptan_code',
            field=models.CharField(blank=True, db_index=True, max_length=16),
        ),
        migrations.AlterField(
            model_name='stoppoint',
            name='stop_type',
            field=models.CharField(blank=True, choices=[('AIR', 'Airport entrance'), ('GAT', 'Air airside area'), ('FTD', 'Ferry terminal/dock entrance'), ('FER', 'Ferry/dock berth area'), ('FBT', 'Ferry berth'), ('RSE', 'Rail station entrance'), ('RLY', 'Rail platform access area'), ('RPL', 'Rail platform'), ('TMU', 'Tram/metro/underground entrance'), ('MET', 'MET'), ('PLT', 'Metro and underground platform access area'), ('BCE', 'Bus/coach station entrance'), ('BCS', 'Bus/coach bay/stand/stance within bus/coach station'), ('BCQ', 'Bus/coach bay'), ('BCT', 'On street bus/coach/tram stop'), ('TXR', 'Taxi rank (head of)'), ('STR', 'Shared taxi rank (head of)')], max_length=3),
        ),
        migrations.AddField(
            model_name='stoppoint',
            name='places',
            field=models.ManyToManyField(blank=True, to='busstops.Place'),
        ),
        migrations.CreateModel(
            name='OperatorCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=100)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.Operator')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.DataSource')),
            ],
            options={
                'unique_together': {('operator', 'code', 'source')},
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_name', models.CharField(max_length=255)),
                ('from_email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('spam_score', models.PositiveIntegerField()),
                ('ip_address', models.GenericIPAddressField()),
                ('referrer', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_number', models.CharField(max_length=20, unique=True)),
                ('service_number', models.CharField(max_length=100)),
                ('traffic_area', models.CharField(max_length=1)),
                ('licence_number', models.CharField(db_index=True, max_length=20)),
                ('discs', models.PositiveIntegerField()),
                ('authorised_discs', models.PositiveIntegerField()),
                ('description', models.CharField(max_length=255)),
                ('start_point', models.CharField(max_length=255)),
                ('finish_point', models.CharField(max_length=255)),
                ('via', models.CharField(blank=True, max_length=255)),
                ('subsidies_description', models.CharField(max_length=255)),
                ('subsidies_details', models.CharField(max_length=255)),
                ('licence_status', models.CharField(max_length=255)),
                ('traffic_area_office_covered_by_area', models.CharField(max_length=100)),
                ('registration_status', models.CharField(db_index=True, default='', max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='servicedate',
            name='end',
            field=models.DateTimeField(null=True),
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variation_number', models.PositiveIntegerField()),
                ('granted_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('effective_date', models.DateField(null=True)),
                ('date_received', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('service_type_other_details', models.TextField()),
                ('registration_status', models.CharField(max_length=255)),
                ('publication_text', models.TextField()),
                ('service_type_description', models.CharField(max_length=255)),
                ('short_notice', models.CharField(max_length=255)),
                ('authority_description', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('-variation_number',),
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255)),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.Operator')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.DataSource')),
            ],
            options={
                'unique_together': {('code', 'source')},
            },
        ),
        migrations.AlterModelOptions(
            name='service',
            options={'ordering': ('service_code',)},
        ),
        migrations.RemoveField(
            model_name='service',
            name='image',
        ),
        migrations.RemoveField(
            model_name='stoppoint',
            name='live_sources',
        ),
        migrations.AlterField(
            model_name='stoppoint',
            name='bearing',
            field=models.CharField(blank=True, choices=[('N', 'north'), ('NE', 'north-east'), ('E', 'east'), ('SE', 'south-east'), ('S', 'south'), ('SW', 'south-west'), ('W', 'west'), ('NW', 'north-west')], max_length=2),
        ),
        migrations.CreateModel(
            name='VehicleLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('datetime', models.DateTimeField()),
                ('latlong', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('current', models.BooleanField(db_index=True, default=False)),
                ('early', models.IntegerField(blank=True, null=True)),
                ('heading', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.DeleteModel(
            name='Image',
        ),
        migrations.DeleteModel(
            name='LiveSource',
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('double_decker', models.NullBooleanField()),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.VehicleType'),
        ),
        migrations.AddField(
            model_name='service',
            name='timetable_wrong',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='operator',
            name='twitter',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AlterModelOptions(
            name='vehicle',
            options={'ordering': ('code',)},
        ),
        migrations.AddField(
            model_name='vehicle',
            name='fleet_number',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='reg',
            field=models.CharField(blank=True, max_length=24),
        ),
        migrations.AlterField(
            model_name='note',
            name='text',
            field=models.TextField(),
        ),
        migrations.AlterUniqueTogether(
            name='vehicle',
            unique_together={('code', 'operator'), ('code', 'source')},
        ),
        migrations.AlterModelOptions(
            name='vehicle',
            options={},
        ),
        migrations.AlterUniqueTogether(
            name='vehicle',
            unique_together={('code', 'operator')},
        ),
        migrations.CreateModel(
            name='SIRISource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField()),
                ('requestor_ref', models.CharField(blank=True, max_length=255)),
                ('admin_areas', models.ManyToManyField(blank=True, to='busstops.AdminArea')),
            ],
        ),
        migrations.AddField(
            model_name='vehicle',
            name='notes',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='latest_location',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='latest_vehicle', to='busstops.VehicleLocation'),
        ),
        migrations.DeleteModel(
            name='Vehicle',
        ),
        migrations.DeleteModel(
            name='VehicleLocation',
        ),
        migrations.DeleteModel(
            name='VehicleType',
        ),
        migrations.AlterIndexTogether(
            name='stopusageusage',
            index_together=None,
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=48)),
                ('url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('how', models.CharField(choices=[('parallel', 'Combine timetables'), ('also', 'Just list')], max_length=10)),
                ('from_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_from', to='busstops.Service')),
                ('to_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_to', to='busstops.Service')),
            ],
        ),
        migrations.DeleteModel(
            name='Registration',
        ),
        migrations.DeleteModel(
            name='Variation',
        ),
        migrations.AddField(
            model_name='operator',
            name='payment_methods',
            field=models.ManyToManyField(blank=True, to='busstops.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='service',
            name='payment_methods',
            field=models.ManyToManyField(blank=True, to='busstops.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='service',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.DataSource'),
        ),
        migrations.AddField(
            model_name='service',
            name='tracking',
            field=models.NullBooleanField(),
        ),
        migrations.AlterField(
            model_name='stoppoint',
            name='locality_centre',
            field=models.NullBooleanField(),
        ),
        migrations.CreateModel(
            name='StopCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.DataSource')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.StopPoint')),
            ],
            options={
                'unique_together': {('code', 'source')},
            },
        ),
        migrations.AddField(
            model_name='operator',
            name='aka',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='operator',
            name='licences',
            field=models.ManyToManyField(blank=True, to='vosa.Licence'),
        ),
        migrations.AddField(
            model_name='locality',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='operator',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='service',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='stopusageusage',
            name='journey',
        ),
        migrations.RemoveField(
            model_name='stopusageusage',
            name='stop',
        ),
        migrations.DeleteModel(
            name='Journey',
        ),
        migrations.DeleteModel(
            name='StopUsageUsage',
        ),
    ]
