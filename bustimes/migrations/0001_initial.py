# Generated by Django 2.2.10 on 2020-02-25 14:21

import autoslug.fields
import bustimes.models
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.ranges
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('busstops', '0001_initial'),
        ('vosa', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mon', models.BooleanField()),
                ('tue', models.BooleanField()),
                ('wed', models.BooleanField()),
                ('thu', models.BooleanField()),
                ('fri', models.BooleanField()),
                ('sat', models.BooleanField()),
                ('sun', models.BooleanField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('dates', django.contrib.postgres.fields.ranges.DateRangeField(null=True)),
            ],
            options={
                'index_together': {('start_date', 'end_date')},
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_name', models.CharField(max_length=255)),
                ('from_email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('spam_score', models.PositiveIntegerField()),
                ('ip_address', models.GenericIPAddressField()),
                ('referrer', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16)),
                ('text', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('aka', models.CharField(blank=True, max_length=100)),
                ('slug', autoslug.fields.AutoSlugField(editable=True, populate_from=str, unique=True)),
                ('vehicle_mode', models.CharField(blank=True, max_length=48)),
                ('parent', models.CharField(blank=True, max_length=48)),
                ('address', models.CharField(blank=True, max_length=128)),
                ('url', models.URLField(blank=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=128)),
                ('twitter', models.CharField(blank=True, max_length=255)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('licences', models.ManyToManyField(blank=True, to='vosa.Licence')),
                ('notes', models.ManyToManyField(blank=True, to='bustimes.Note')),
            ],
            options={
                'ordering': ('name',),
            },
            bases=(bustimes.models.ValidateOnSaveMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=48)),
                ('url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255)),
                ('line_brand', models.CharField(blank=True, max_length=255)),
                ('line_name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('dates', django.contrib.postgres.fields.ranges.DateRangeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_code', models.CharField(max_length=24)),
                ('line_name', models.CharField(blank=True, max_length=64)),
                ('line_brand', models.CharField(blank=True, max_length=64)),
                ('description', models.CharField(blank=True, db_index=True, max_length=255)),
                ('outbound_description', models.CharField(blank=True, max_length=255)),
                ('inbound_description', models.CharField(blank=True, max_length=255)),
                ('slug', autoslug.fields.AutoSlugField(editable=True, populate_from=str, unique=True)),
                ('mode', models.CharField(max_length=11)),
                ('date', models.DateField()),
                ('current', models.BooleanField(db_index=True, default=True)),
                ('show_timetable', models.BooleanField(default=False)),
                ('timetable_wrong', models.BooleanField(default=False)),
                ('geometry', django.contrib.gis.db.models.fields.MultiLineStringField(editable=False, null=True, srid=4326)),
                ('tracking', models.NullBooleanField()),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('notes', models.ManyToManyField(blank=True, to='bustimes.Note')),
                ('operator', models.ManyToManyField(blank=True, to='bustimes.Operator')),
                ('payment_methods', models.ManyToManyField(blank=True, to='bustimes.PaymentMethod')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='busstops.Region')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.DataSource')),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inbound', models.BooleanField(default=False)),
                ('journey_pattern', models.CharField(blank=True, max_length=255)),
                ('sequence', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('start', models.DurationField()),
                ('end', models.DurationField()),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bustimes.Calendar')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.StopPoint')),
                ('notes', models.ManyToManyField(blank=True, to='bustimes.Note')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bustimes.Route')),
            ],
            options={
                'index_together': {('route', 'start', 'end')},
            },
        ),
        migrations.CreateModel(
            name='StopUsage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction', models.CharField(max_length=8)),
                ('order', models.PositiveIntegerField()),
                ('timing_status', models.CharField(choices=[('PPT', 'Principal point'), ('TIP', 'Time info point'), ('PTP', 'Principal and time info point'), ('OTH', 'Other bus stop')], max_length=3)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bustimes.Service')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.StopPoint')),
            ],
            options={
                'ordering': ('direction', 'order'),
            },
        ),
        migrations.CreateModel(
            name='ServiceLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('how', models.CharField(choices=[('parallel', 'Combine timetables'), ('also', 'Just list')], max_length=10)),
                ('from_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_from', to='bustimes.Service')),
                ('to_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_to', to='bustimes.Service')),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='stops',
            field=models.ManyToManyField(editable=False, through='bustimes.StopUsage', to='busstops.StopPoint'),
        ),
        migrations.AddField(
            model_name='route',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bustimes.Service'),
        ),
        migrations.AddField(
            model_name='route',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.DataSource'),
        ),
        migrations.AddField(
            model_name='operator',
            name='payment_methods',
            field=models.ManyToManyField(blank=True, to='bustimes.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='operator',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.Region'),
        ),
        migrations.CreateModel(
            name='CalendarDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(db_index=True)),
                ('end_date', models.DateField(blank=True, db_index=True, null=True)),
                ('dates', django.contrib.postgres.fields.ranges.DateRangeField(null=True)),
                ('operation', models.BooleanField(db_index=True)),
                ('special', models.BooleanField(db_index=True, default=False)),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bustimes.Calendar')),
            ],
        ),
        migrations.CreateModel(
            name='StopTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stop_code', models.CharField(max_length=255)),
                ('arrival', models.DurationField()),
                ('departure', models.DurationField()),
                ('sequence', models.PositiveSmallIntegerField()),
                ('timing_status', models.CharField(blank=True, max_length=3)),
                ('activity', models.CharField(blank=True, max_length=16)),
                ('stop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='busstops.StopPoint')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bustimes.Trip')),
            ],
            options={
                'ordering': ('sequence',),
                'index_together': {('stop', 'departure')},
            },
        ),
        migrations.CreateModel(
            name='ServiceCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bustimes.Service')),
            ],
            options={
                'unique_together': {('service', 'scheme', 'code')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='service',
            unique_together={('service_code', 'source')},
        ),
        migrations.AlterUniqueTogether(
            name='route',
            unique_together={('source', 'code')},
        ),
        migrations.AlterIndexTogether(
            name='route',
            index_together={('start_date', 'end_date')},
        ),
        migrations.CreateModel(
            name='OperatorCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=100)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bustimes.Operator')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='busstops.DataSource')),
            ],
            options={
                'unique_together': {('operator', 'code', 'source')},
            },
        ),
    ]
